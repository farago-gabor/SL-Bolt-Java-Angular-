Nagyon sz√≠vesen! Most pedig n√©zz√ºk, **hogyan m√≥dos√≠tsd a legels≈ë √ºzenetedben k√ºld√∂tt SQL pr√≥baadatokat**, hogy **t√∂bb nap‚Äìid≈ëpont p√°rt** is legyen egy tev√©kenys√©ghez (pl. ‚Äûk√°v√©g√©p tiszt√≠t√°s‚Äù h√©tf≈ë 07:00 √©s 14:00, kedd 14:00 stb.).

---

## ‚úÖ 1. **T√°bl√°k friss√≠t√©se** *(ha m√©g nem tetted meg)*

A `tevekenyseg_gyakorisag_napok` t√°bl√°t m√≥dos√≠tanod kell, hogy ne csak `nap`, hanem `ido_pont` is legyen benne:

```sql
DROP TABLE IF EXISTS tevekenyseg_gyakorisag_napok;

CREATE TABLE tevekenyseg_gyakorisag_napok (
    gyakorisag_id INT,
    nap VARCHAR(20),       -- pl. 'hetfo'
    ido_pont VARCHAR(10),  -- pl. '07:00'
    FOREIGN KEY (gyakorisag_id) REFERENCES tevekenyseg_gyakorisag(id) ON DELETE CASCADE
);
```

> ‚òùÔ∏è Fontos: Ezt **egyszer** kell elv√©gezni, miel≈ëtt a pr√≥baadatokat beilleszted.

---

## ‚úÖ 2. **Pr√≥baadat besz√∫r√°s ‚Äì t√∂bb nap‚Äìid≈ëpont egy tev√©kenys√©ghez**

Itt egy teljes SQL szkript, amit nyugodtan futtathatsz tesztel√©sre.

```sql
-- √öj tev√©kenys√©g
INSERT INTO tevekenysegek (megnevezes, leiras)
VALUES ('K√°v√©g√©p tiszt√≠t√°s', 'K√°v√©g√©p napi karbantart√°sa');

-- Tegy√ºk fel, hogy ez az el≈ëz≈ë ID = 1
-- Gyakoris√°g hozz√°rendel√©se: heti, kezd≈ë d√°tum: 2025-10-13
INSERT INTO tevekenyseg_gyakorisag (tevekenyseg_id, gyakorisag, kezdo_datum)
VALUES (1, 'heti', '2025-10-13');

-- Tegy√ºk fel, hogy ez az el≈ëz≈ë ID = 1 is (gyakoris√°g)
-- Nap‚Äìid≈ëpont p√°rok (t√∂bb id≈ëpont ugyanarra a napra is!)
INSERT INTO tevekenyseg_gyakorisag_napok (gyakorisag_id, nap, ido_pont)
VALUES 
(1, 'hetfo', '07:00'),
(1, 'hetfo', '14:00'),
(1, 'kedd', '14:00');
```

---

## ‚úÖ 3. (Opcion√°lis) T√∂bb tev√©kenys√©g hozz√°ad√°sa

```sql
-- M√°sodik tev√©kenys√©g
INSERT INTO tevekenysegek (megnevezes, leiras)
VALUES ('Pult fert≈ëtlen√≠t√©se', 'A pult napi fert≈ëtlen√≠t√©se m≈±szak v√©g√©n.');

INSERT INTO tevekenyseg_gyakorisag (tevekenyseg_id, gyakorisag, kezdo_datum)
VALUES (2, 'heti', '2025-10-13');

-- ID = 2 eset√©n:
INSERT INTO tevekenyseg_gyakorisag_napok (gyakorisag_id, nap, ido_pont)
VALUES 
(2, 'hetfo', '21:00'),
(2, 'szerda', '21:00'),
(2, 'pentek', '21:00');
```

---

## üß™ Tesztel√©shez hasznos

Ha ki akarod olvasni, mit t√°rolt√°l:

```sql
SELECT t.megnevezes, g.gyakorisag, n.nap, n.ido_pont
FROM tevekenysegek t
JOIN tevekenyseg_gyakorisag g ON t.id = g.tevekenyseg_id
JOIN tevekenyseg_gyakorisag_napok n ON g.id = n.gyakorisag_id;
```

---

## ‚úÖ √ñsszefoglal√°s

A pr√≥baadatok m√≥dos√≠t√°s√°hoz:

1. Friss√≠tsd a `tevekenyseg_gyakorisag_napok` t√°bl√°t: `ido_pont` mez≈ëvel.
2. Illessz be minden nap‚Äìid≈ëpont p√°rt k√ºl√∂n sorba.
3. Tesztel√©shez a fenti `SELECT` lek√©rdez√©ssel ellen≈ërizheted a beillesztett adatokat.

---

Ha szeretn√©d, sz√≠vesen k√©sz√≠tek neked komplett **Flyway** vagy **Spring Data JPA initializer** szkriptet is a tesztadatokhoz.
